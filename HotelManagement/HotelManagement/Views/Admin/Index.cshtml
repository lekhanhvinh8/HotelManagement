@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>

    <link rel="stylesheet" type="text/css" href="~/Content/bootstrap.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/DataTables/css/dataTables.bootstrap.css" />
    <link href="https://cdn.jsdelivr.net/npm/jquery-smarttab@3/dist/css/smart_tab_all.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" type="text/css" href="~/Content/Admin.css"/>
</head>
<body>
    <div class="container">
        <div id="smart-tab">
            <ul class="nav">
                <li>
                    <a class="nav-link" href="#tab-room-categories-management">
                        Room Categories
                    </a>
                </li>
                <li>
                    <a class="nav-link" href="#tab-room-management">
                        Rooms
                    </a>
                </li>
                <li>
                    <a class="nav-link" href="#tab-guest-categories-management">
                        Guest Categories
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div id="tab-room-categories-management" class="tab-pane" role="tabpanel">
                    <div>
                        <button id="add-new-room-category" class="btn btn-primary">Add new room category</button>
                    </div>
                    <br />
                    <div>
                        <table id="table-room-categories" class="table table-bordered table-hover">
                            <thead>

                            </thead>
                            <tbody>

                            </tbody>
                        </table>
                    </div>
                    <div id="dialog-room-category" style="display: none;">
                        <form id="form-room-category" role="form">
                            <div class="form-group">
                                <label for="id">Id</label>
                                <input id="room-category-ID" class="form-control" type="number" disabled="disabled" name="id" />
                            </div>
                            <div class="form-group">
                                <label for="name">Name</label>
                                <input id="room-category-name" class="form-control" type="text" name="name" />
                            </div>
                            <div class="form-group">
                                <label for="unit_price">Unit Price</label>
                                <input id="room-category-unit-price" class="form-control" type="number" name="unitPrice" />
                            </div>
                            <div class="form-group">
                                <label for="max_number_of_guests">Max Number Of Guest</label>
                                <input id="room-category-max-guests" class="form-control" type="number" name="maxNumberOfGuest" />
                            </div>
                            <div class="form-group">
                                <label for="num_start_surcharge">Number to start surcharge</label>
                                <input id="room-category-num-surcharge" class="form-control" type="number" name="numStartSurcharge" />
                            </div>
                            <div class="form-group">
                                <label for="surcharge_rate">Surcharge Rate</label>
                                <input id="room-category-surcharge-rate" class="form-control" type="number" name="surchargeRate" />
                            </div>
                        </form>
                    </div>
                </div>
                <div id="tab-room-management" class="tab-pane" role="tabpanel">
                    <div>
                        <div class="form-group" style="width:30%;">
                            <label for="room-category-id">Room Category</label>
                            <select id="room-room-category-id" class="form-control" name="roomCategoryId">
                                
                            </select>
                        </div>
                    </div>
                    <div>
                        <button id="add-new-room" class="btn btn-primary">Add new room</button>
                    </div>
                    <br />
                    <div>
                        <table id="table-rooms" class="table table-bordered table-hover">
                            <thead>

                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <div id="dialog-room" style="display: none;">
                        <form id="form-room" role="form">
                            <div class="form-group">
                                <label for="id">Id</label>
                                <input id="room-id" class="form-control" type="number" disabled="disabled" name="id" />
                            </div>
                            <div class="form-group">
                                <label for="room-number">Room's Number</label>
                                <input id="room-number" class="form-control" type="text" name="number" />
                            </div>
                            <div class="form-group">
                                <label for="note">Note</label>
                                <input id="room-note" class="form-control" type="text" name="note" />
                            </div>
                        </form>
                    </div>
                </div>

                <div id="tab-guest-categories-management" class="tab-pane" role="tabpanel">
                    <div>
                        <button id="add-new-guest-category" class="btn btn-primary">Add new guest category</button>
                    </div>
                    <br />
                    <div>
                        <table id="table-guest-categories" class="table table-bordered table-hover">
                            <thead>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>

                    <div id="dialog-guest-category" style="display: none;">
                        <form id="form-guest-category" role="form">
                            <div class="form-group">
                                <label for="id">Id</label>
                                <input id="guest-category-id" class="form-control" type="number" disabled="disabled" name="id" />
                            </div>
                            <div class="form-group">
                                <label for="name">Name</label>
                                <input id="guest-category-name" class="form-control" type="text" name="name" />
                            </div>
                            <div class="form-group">
                                <label for="coefficient">Coefficient</label>
                                <input id="guest-category-coefficient" class="form-control" type="number" name="coefficient" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootbox.js"></script>
    <script src="~/Scripts/DataTables/jquery.dataTables.js"></script>
    <script src="~/Scripts/DataTables/dataTables.bootstrap.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-smarttab@3/dist/js/jquery.smartTab.min.js" type="text/javascript"></script>
    <script src="~/Scripts/DataTables/dataTables.scroller.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>

    <script>
        var initialName;
        $(document).ready(function () {

            var dataTableRoomCategory = $("#table-room-categories").DataTable({
                ajax: {
                    url: "/api/RoomCategories",
                    dataSrc: "",
                },
                columns: [
                    {
                        title: "ID",
                        data: "id",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Name",
                        data: "name",
                        render: function (data, type, roomCategory) {
                            return "<button class='btn btn-link js-modify' data=" + roomCategory.id + ">" + data + "</button>";
                        },
                    },
                    {
                        title: "Unit Price",
                        data: "unitPrice",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Maximum Guest",
                        data: "maxNumberOfGuest",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Number start surcharge",
                        data: "numStartSurcharge",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Surcharge Rate",
                        data: "surchargeRate",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Delete",
                        data: "id",
                        render: function (data) {
                            return "<button class='btn js-delete' data=" + data + ">Delete</button>";
                        },
                    },
                ],
                scrollY: 280,
                scroller: true,
                deferRender: true,
            });

            $.ajax({
                url: "/api/RoomCategories",
                method: "Get",
                async: false,
                success: function (response) {
                    $("#room-room-category-id").find("option").remove();
                    for (var i = 0; i < response.length; i++) {
                        $("#room-room-category-id").append("<option data=" + response[i].id + ">" + response[i].name + "</option>");
                    }
                },
            });

            var dataTableRoom = $("#table-rooms").DataTable({
                ajax: {
                    url: "/api/Rooms/GetSome?roomCategoryId=" + $("#room-room-category-id option:selected").attr("data"),
                    dataSrc: "",
                },
                columns: [
                    {
                        title: "ID",
                        data: "id",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Room Number",
                        data: "roomNumber",
                        render: function (data, type, room) {
                            return "<button class='btn btn-link js-modify' data=" + room.id + ">" + data + "</button>";
                        },
                    },
                    {
                        title: "Note",
                        data: "note",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Room Category",
                        data: "roomCategoryName",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Delete",
                        data: "id",
                        render: function (data) {
                            return "<button class='btn js-delete' data=" + data + ">Delete</button>";
                        },
                    },
                ],
                scrollY: 280,
                scroller: true,
                deferRender: true,
            });

            var dataTableGuestCategory = $("#table-guest-categories").DataTable({
                ajax: {
                    url: "/api/GuestCategories",
                    dataSrc: "",
                },
                columns: [
                    {
                        title: "Guest Category's ID",
                        data: "id",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Name",
                        data: "name",
                        render: function (data, type, guestCategory) {
                            return "<button class='btn btn-link js-modify' data=" + guestCategory.id + ">" + data + "</button>";
                        },
                    },
                    {
                        title: "Coefficient",
                        data: "coefficient",
                        render: function (data) {
                            return data;
                        },
                    },
                    {
                        title: "Delete",
                        data: "id",
                        render: function (data) {
                            return "<button class='btn js-delete' data=" + data + ">Delete</button>";
                        },
                    }

                ],
                scrollY: 280,
                scroller: true,
                deferRender: true,
            });

            var smartTab = $("#smart-tab").smartTab();
            smartTab.smartTab("goToTab", 0);

            /*
            smartTab.on("leaveTab", function (e, anchorObject, tabIndex) {
                if (tabIndex == 0 || tabIndex == 1)
                    dataTable.destroy();
            });
            */

            smartTab.on("tabContent", function (e, anchorObject, tabIndex) {
                if (tabIndex === 0) {
                    dataTableRoomCategory.ajax.reload();
                }
                if (tabIndex == 1) {
                    $.ajax({
                        url: "/api/RoomCategories",
                        method: "Get",
                        async: false,
                        success: function (response) {
                            $("#room-room-category-id").find("option").remove();
                            for (var i = 0; i < response.length; i++) {
                                $("#room-room-category-id").append("<option data=" + response[i].id + ">" + response[i].name + "</option>");
                            }
                        },
                    });

                    dataTableRoom.ajax.reload();
                }
                if (tabIndex == 2) {
                    dataTableGuestCategory.ajax.reload();
                }
            });

            //Room Category Management

            $("#add-new-room-category").on("click", function () {

                $("#room-category-ID").attr("value", "");
                $("#room-category-name").attr("value", "");
                $("#room-category-unit-price").attr("value", "");
                $("#room-category-max-guests").attr("value", "");
                $("#room-category-num-surcharge").attr("value", "");
                $("#room-category-surcharge-rate").attr("value", "");

                CreateRoomCategoryBootBoxDialog("Add new room category", dataTableRoomCategory, "add");
            });
            $("#table-room-categories").on("click", ".js-modify", function () {
                $.ajax({
                    url: "/api/RoomCategories/Get?id=" + $(this).attr("data"),
                    method: "Get",
                    success: function (response) {
                        $("#room-category-ID").attr("value", response.id);
                        $("#room-category-name").attr("value", response.name);
                        $("#room-category-unit-price").attr("value", response.unitPrice);
                        $("#room-category-max-guests").attr("value", response.maxNumberOfGuest);
                        $("#room-category-num-surcharge").attr("value", response.numStartSurcharge);
                        $("#room-category-surcharge-rate").attr("value", response.surchargeRate);

                        initialName = response.name;

                        CreateRoomCategoryBootBoxDialog("Modify" + response.id, dataTableRoomCategory, "modify");
                    },
                });
            });
            $("#table-room-categories").on("click", ".js-delete", function () {
                button = $(this);
                bootbox.confirm("Are you sure you want to delete room category " + button.attr("data"), function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/RoomCategories/Delete?id=" + button.attr("data"),
                            method: "Delete",
                            success: function () {
                                dataTableRoomCategory.row(button.parents("tr")).remove().draw();
                            },
                        });
                    }
                });
            });

            //Room management
            $("#room-room-category-id").on("change", function () {
                dataTableRoom.ajax.url('/api/Rooms/GetSome?roomCategoryId=' + $("#room-room-category-id option:selected").attr("data")).load();
                dataTableRoom.ajax.reload();
            });
            
            $("#add-new-room").on("click", function () {

                $("#room-id").attr("value", "");
                $("#room-number").attr("value", "");
                $("#room-note").attr("value", "");

                CreateRoomBootBoxDialog("Add new room", dataTableRoom, "add");
            });
            $("#table-rooms").on("click", ".js-modify", function () {
                $.ajax({
                    url: "/api/Rooms/GetRoom?id=" + $(this).attr("data"),
                    method: "Get",
                    success: function (response) {
                        $("#room-id").attr("value", response.id);
                        $("#room-number").attr("value", response.roomNumber);
                        $("#room-note").attr("value", response.note);

                        initialName = $("#room-number").val();

                        CreateRoomBootBoxDialog("Modify" + response.id, dataTableRoom, "modify");
                    },
                });
            });
            $("#table-rooms").on("click", ".js-delete", function () {
                button = $(this);
                bootbox.confirm("Are you sure you want to delete room" + button.attr("data"), function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/Rooms/Delete?id=" + button.attr("data"),
                            method: "Delete",
                            success: function () {
                                dataTableRoom.row(button.parents("tr")).remove().draw();
                            },
                        });
                    }
                });
            });

            //Guest categories management
            $("#add-new-guest-category").on("click", function () {
                
                $("#guest-category-id").attr("value", "");
                $("#guest-category-name").attr("value", "");
                $("#guest-category-coefficient").attr("value", "");

                CreateGuestCategoryBootBoxDialog("Add new guest category", dataTableGuestCategory, "add");
            });

            $("#table-guest-categories").on("click", ".js-modify", function () {
                $.ajax({
                    url: "/api/GuestCategories/Get?id=" + $(this).attr("data"),
                    method: "Get",
                    success: function (response) {
                        $("#guest-category-id").attr("value", response.id);
                        $("#guest-category-name").attr("value", response.name);
                        $("#guest-category-coefficient").attr("value", response.coefficient);

                        CreateGuestCategoryBootBoxDialog("Modify" + response.id, dataTableGuestCategory, "modify");
                    },
                });
            });

            $("#table-guest-categories").on("click", ".js-delete", function () {
                button = $(this);
                bootbox.confirm("Are you sure you want to delete guest category " + button.attr("data"), function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/GuestCategories/Delete?id=" + button.attr("data"),
                            method: "Delete",
                            success: function () {
                                dataTableGuestCategory.row(button.parents("tr")).remove().draw();
                            },
                        });
                    }
                });
            });

            jQuery.fn.serializeJSON = function () {
                var json = {};

                jQuery.map(jQuery(this).serializeArray(), function (n) {
                    var _ = n.name.indexOf('[');

                    if (_ > -1) {
                        var o = json,
                            _name;

                        _name = n.name.replace(/\]/gi, '').split('[');

                        for (var i = 0, len = _name.length; i < len; i++) {
                            if (i == len - 1) {
                                if (o[_name[i]]) {
                                    if (typeof o[_name[i]] == 'string') {
                                        o[_name[i]] = [o[_name[i]]];
                                    }

                                    o[_name[i]].push(n.value);
                                } else {
                                    o[_name[i]] = n.value || '';
                                }
                            } else {
                                o = o[_name[i]] = o[_name[i]] || {};
                            }
                        }
                    } else if (json[n.name] !== undefined) {
                        if (!json[n.name].push) {
                            json[n.name] = [json[n.name]];
                        }

                        json[n.name].push(n.value || '');
                    } else {
                        json[n.name] = n.value || '';
                    }
                });

                return json;
            };

            function CreateRoomCategoryBootBoxDialog(title, table, mode) {

                dialogBootbox = bootbox.dialog({
                    message: $("#dialog-room-category").html(),
                    title: title,
                    buttons: [
                        {
                            label: "Save",
                            className: "btn btn-primary",
                            callback: function () {
                                var form = dialogBootbox.find("#form-room-category");
                                var items = form.serializeJSON();

                                if (mode == "add") {

                                    form.validate({
                                        rules: {
                                            name: {
                                                required: true,
                                                checkUniqueNameOfCategoryAdd: true,
                                            },
                                            unitPrice: {
                                                required: true,
                                                min: 0,
                                            },
                                            maxNumberOfGuest: {
                                                required: true,
                                                min: 0,
                                            },
                                            numStartSurcharge: {
                                                required: true,
                                                min: 0,
                                            },
                                            surchargeRate: {
                                                required: true,
                                                min: 0,
                                            },
                                        },
                                        messages: {
                                            name: {
                                                required: "Name is required !!!",
                                            }
                                        },
                                    });

                                    if (form.valid() == false)
                                        return false;

                                    $.ajax({
                                        url: "/api/RoomCategories",
                                        method: "Post",
                                        data: {
                                            name: items.name,
                                            unitPrice: items.unitPrice,
                                            maxNumberOfGuest: items.maxNumberOfGuest,
                                            numStartSurcharge: items.numStartSurcharge,
                                            surchargeRate: items.surchargeRate,
                                        },
                                        success: function (response) {
                                            var trDOM = table.row.add({
                                                id: response.id,
                                                name: response.name,
                                                unitPrice: response.unitPrice,
                                                maxNumberOfGuest: response.maxNumberOfGuest,
                                                numStartSurcharge: response.numStartSurcharge,
                                                surchargeRate: response.surchargeRate,
                                            }).draw(false).node();
                                        },
                                    });
                                }

                                if(mode == "modify")
                                {
                                    form.validate({
                                        rules: {
                                            name: {
                                                required: true,
                                                checkUniqueNameOfCategoryUpdate: true,
                                            },
                                            unitPrice: {
                                                required: true,
                                                min: 0,
                                            },
                                            maxNumberOfGuest: {
                                                required: true,
                                                min: 0,
                                            },
                                            numStartSurcharge: {
                                                required: true,
                                                min: 0,
                                            },
                                            surchargeRate: {
                                                required: true,
                                                min: 0,
                                            },
                                        },
                                        messages: {
                                            name: {
                                                required: "Name is required !!!",
                                            }
                                        },
                                    });

                                    if (form.valid() == false)
                                        return false;

                                    $.ajax({
                                        url: "/api/RoomCategories",
                                        method: "Put",
                                        data: {
                                            id: $("#room-category-ID").attr("value"),
                                            name: items.name,
                                            unitPrice: items.unitPrice,
                                            maxNumberOfGuest: items.maxNumberOfGuest,
                                            numStartSurcharge: items.numStartSurcharge,
                                            surchargeRate: items.surchargeRate,
                                        },
                                        success: function (response) {
                                            var indexes = table.rows().eq(0).filter(function (rowIdx) {
                                                return table.cell(rowIdx, 0).data() === response.id;
                                            });

                                            var newData = table.row(indexes[0]).data();
                                            newData.name = items.name;
                                            newData.unitPrice = items.unitPrice;
                                            newData.maxNumberOfGuest = items.maxNumberOfGuest;
                                            newData.numStartSurcharge = items.numStartSurcharge;
                                            newData.surchargeRate = items.surchargeRate;

                                            table.row(indexes[0]).data(newData).draw();
                                        },
                                    });
                                }
                            },
                        },
                        {
                            label: "Cancel",
                            className: "btn btn-primary",
                            callback: function () {

                            },
                        }
                    ],
                });
            }

            function CreateRoomBootBoxDialog(title, table, mode) {
                dialogBootbox = bootbox.dialog({
                    message: $("#dialog-room").html(),
                    title: title,
                    buttons: [
                        {
                            label: "Save",
                            className: "btn btn-primary",
                            callback: function () {
                                var form = dialogBootbox.find("#form-room");
                                var items = form.serializeJSON();

                                if (mode == "add") {

                                    form.validate({
                                        rules: {
                                            number: {
                                                required: true,
                                                checkUniqueRoomNumberAdd: true,
                                            },
                                            note: {
                                                required: true,
                                            },
                                        },
                                        messages: {
                                            
                                        },
                                    });

                                    if (form.valid() == false)
                                        return false;

                                    $.ajax({
                                        url: "/api/Rooms",
                                        method: "Post",
                                        data: {
                                            roomNumber: items.number,
                                            note: items.note,
                                            roomCategoryID: $("#room-room-category-id option:selected").attr("data"),
                                        },
                                        success: function (response) {
                                            var trDOM = table.row.add({
                                                id: response.id,
                                                roomNumber: response.roomNumber,
                                                note: response.note,
                                                roomCategoryName: response.roomCategoryName,
                                            }).draw(false).node();
                                        },
                                    });
                                }

                                if (mode == "modify") {
                                    form.validate({
                                        rules: {
                                            number: {
                                                required: true,
                                                checkUniqueRoomNumberUpdate: true,
                                            },
                                            note: {
                                                required: true,
                                            },
                                        },
                                        messages: {

                                        },
                                    });

                                    if (form.valid() == false)
                                        return false;

                                    $.ajax({
                                        url: "/api/Rooms",
                                        method: "Put",
                                        data: {
                                            id: $("#room-id").attr("value"),
                                            roomNumber: items.number,
                                            note: items.note,
                                            roomCategoryID: $("#room-room-category-id option:selected").attr("data"),
                                        },
                                        success: function (response) {
                                            var indexes = table.rows().eq(0).filter(function (rowIdx) {
                                                return table.cell(rowIdx, 0).data() === response.id;
                                            });

                                            var newData = table.row(indexes[0]).data();
                                            newData.roomNumber = response.roomNumber;
                                            newData.note = response.note;
                                            newData.roomCategoryName = response.roomCategoryName;

                                            table.row(indexes[0]).data(newData).draw();
                                        },
                                    });
                                }
                            },
                        },
                        {
                            label: "Cancel",
                            className: "btn btn-primary",
                            callback: function () {

                            },
                        }
                    ],
                });
            }

            function CreateGuestCategoryBootBoxDialog(title, table, mode) {
                dialogBootbox = bootbox.dialog({
                    message: $("#dialog-guest-category").html(),
                    title: title,
                    buttons: [
                        {
                            label: "Save",
                            className: "btn btn-primary",
                            callback: function () {
                                var form = dialogBootbox.find("#form-guest-category");
                                var items = form.serializeJSON();

                                form.validate({
                                    rules: {
                                        name: {
                                            required: true,
                                        },
                                        coefficient: {
                                            required: true,
                                        },
                                    },
                                    messages: {

                                    },
                                });

                                if (form.valid() == false)
                                    return false;

                                if (mode == "add") {
                                    $.ajax({
                                        url: "/api/GuestCategories",
                                        method: "Post",
                                        data: {
                                            name: items.name,
                                            coefficient: items.coefficient,
                                        },
                                        success: function (response) {
                                            var trDOM = table.row.add({
                                                id: response.id,
                                                name: response.name,
                                                coefficient: response.coefficient,
                                            }).draw(false).node();
                                        },
                                    });
                                }

                                if (mode == "modify") {
                                    $.ajax({
                                        url: "/api/GuestCategories",
                                        method: "Put",
                                        data: {
                                            id: $("#guest-category-id").attr("value"),
                                            name: items.name,
                                            coefficient: items.coefficient,
                                        },
                                        success: function (response) {
                                            var indexes = table.rows().eq(0).filter(function (rowIdx) {
                                                return table.cell(rowIdx, 0).data() === response.id;
                                            });

                                            var newData = table.row(indexes[0]).data();
                                            newData.name = response.name;
                                            newData.coefficient = response.coefficient;

                                            table.row(indexes[0]).data(newData).draw();
                                        },
                                    });
                                }
                            },
                        },
                        {
                            label: "Cancel",
                            className: "btn btn-primary",
                            callback: function () {

                            },
                        }
                    ],
                });

            }
        });

        jQuery.validator.addMethod("checkUniqueNameOfCategoryAdd", function (value) {
            var isValid = true;
            $.ajax({
                url: "/api/RoomCategories",
                method: "Get",
                async: false,
                success: function (response) {
                    for (var i = 0; i < response.length; i++) {
                        if (response[i].name == value) {
                            isValid = false;
                        }
                    }
                }
            });
            return isValid;
        }, "there're a name like this in our data, please try another name");

        jQuery.validator.addMethod("checkUniqueNameOfCategoryUpdate", function (value) {
            var isValid = true;
            $.ajax({
                url: "/api/RoomCategories",
                method: "Get",
                async: false,
                success: function (response) {
                    for (var i = 0; i < response.length; i++) {
                        if (response[i].name == value) {
                            if (response[i].name != initialName)
                                isValid = false;
                        }
                    }
                }
            });
            return isValid;
        }, "there're a name like this in our data, please try another name");

        jQuery.validator.addMethod("checkUniqueRoomNumberAdd", function (value) {
            var isValid = true;
            $.ajax({
                url: "/api/Rooms",
                method: "Get",
                async: false,
                success: function (response) {
                    for (var i = 0; i < response.length; i++) {
                        if (response[i].roomNumber.trim() == value.trim()) {
                            isValid = false;
                        }
                    }
                }
            });
            return isValid;
        }, "there're a name like this in our data, please try another name");

        jQuery.validator.addMethod("checkUniqueRoomNumberUpdate", function (value) {
            var isValid = true;
            $.ajax({
                url: "/api/Rooms",
                method: "Get",
                async: false,
                success: function (response) {
                    for (var i = 0; i < response.length; i++) {
                        if (response[i].roomNumber.trim() == value.trim()) {
                            if (response[i].roomNumber.trim() != initialName.trim())
                                isValid = false;
                        }
                    }
                }
            });
            return isValid;
        }, "there're a name like this in our data, please try another name");
    </script>
</body>
</html>
